name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  backend:
    name: Backend CI
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:6.2
        ports:
          - 6379:6379
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run lint
        working-directory: ./backend
        run: npm run lint

      - name: Run tests
        working-directory: ./backend
        run: npm test

  python-service:
    name: Clustering Service CI
    runs-on: ubuntu-latest
    needs: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Python dependencies
        working-directory: ./clustering_service
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        working-directory: ./clustering_service
        run: flake8 .

      - name: Run tests
        working-directory: ./clustering_service
        run: pytest --maxfail=1 --disable-warnings -q

  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest
    needs: [backend, python-service]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run lint
        working-directory: ./frontend
        run: npm run lint

      - name: Run tests
        working-directory: ./frontend
        run: npm test
